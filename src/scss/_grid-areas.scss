/// Layout Areas
/// Outputs grid grid template areas
///
/// @param {String} $class — class name for grid
@mixin oLayoutAreas($class: $o-layout-class) {
	@include oLayoutAreaHeader($class);
	@include oLayoutAreaSidebar($class);
	@include oLayoutAreaMain($class);
	@include oLayoutAreaFooter($class);
}

/// Header Area
/// Outputs grid header area
///
/// @param {String} $class — class name for grid
@mixin oLayoutAreaHeader($class: $o-layout-class) {
	@include oHeaderServices();
	.#{$class}__area--header {
		grid-area: header;
	}
}

/// Sidebar Area
/// Outputs grid sidebar area
///
/// @param {String} $class — class name for grid
@mixin oLayoutAreaSidebar($class: $o-layout-class) {
	.#{$class}__area--sidebar {
		@include oTypographySans(1);
		@include _oLayoutNavigation($class);
		@include oLayoutBreakPoint($until: M) {
			padding: 0 1rem;
		}

		grid-area: sidebar;

		a {
			@include oTypographyLink;
			border: 0;
		}
	}
}

/// Main Area
/// Outputs grid main content area
///
/// @param {String} $class — class name for grid
@mixin oLayoutAreaMain($class: $o-layout-class) {
	.#{$class}__area--main {
		@include _oLayoutBody;
		@include _oLayoutAside($class);
		@include _oLayoutTable($class);
		@include oLayoutBreakPoint($until: M) {
			padding: 0 1rem;
		}

		@include oLayoutBreakPoint($from: ML) {
			display: grid;
			grid-column-gap: $_o-layout-gutter;
			grid-template-columns: $_o-layout-main-section-width 1fr;
		}

		grid-area: main;
		overflow: hidden;

		* {
			grid-column: 1;
		}

		.#{$class}__rule-left {
			@include oLayoutRule('left');
		}

		.#{$class}__rule-right {
			@include oLayoutRule('right');
		}
	}
}

/// Footer Area
/// Outputs grid footer area
///
/// @param {String} $class — class name for grid
@mixin oLayoutAreaFooter($class: $o-layout-class, $logo: null) {
	@include oFooterServicesBase();

	@if $logo != null {
		@include oFooterServicesWithLogo($image: $logo);
	}

	.#{$class}__area--footer {
		grid-area: footer;
		padding: 0;
	}
}

/// Navigation
/// Outputs navigation styles
///
/// @param {String} $class — class name for grid
/// @access Private
@mixin _oLayoutNavigation($class: $o-layout-class) {
	.#{$class}__navigation {
		@include oLayoutBreakPoint($from: M) {
			@include oLayoutRule('right');
			position: sticky;
			top: $_o-layout-gutter;
			text-align: right;
			margin-top: $_o-layout-gutter;
		}

		@include oLayoutRule('left');
		text-align: left;
		list-style: none;
		margin: 0;

		li {
			padding: 0.3em 0;

			&:before {
				content: '';
				padding: 0;
			}
		}
	}
}

/// Aside
/// Outputs container for content asides
///
/// @param {String} $class — class name for grid
/// @access Private
@mixin _oLayoutAside($class: $o-layout-class) {
	.#{$class}__aside {
		@include oLayoutBreakPoint($from: L) {
			display: grid; //TODO: change to subgrid when property is implemented in browsers
			grid-column-end: span 2;
			grid-template-columns: $_o-layout-main-section-width auto;
			grid-column-gap: $_o-layout-gutter;

			aside {
				grid-column: 2;
			}
		}
	}
}


/// Aside
/// Outputs table styles
///
/// @param {String} $class — class name for grid
/// @access Private
@mixin _oLayoutTable($class: $o-layout-class) {
	.#{$class}__table {
		grid-column: 1 / span 2;
		overflow-x: scroll;
		padding-right: 1rem;
	}
}
