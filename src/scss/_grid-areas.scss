/// Layout Areas
/// Outputs grid grid template areas
/// @param {String} $hero-image - An image for the "hero" area background.
/// @access private
@mixin _oLayoutAreas($hero-image: '') {
	@include _oLayoutAreaHeader();
	@include _oLayoutAreaSidebar();
	@include _oLayoutAreaHero($hero-image);
	@include _oLayoutAreaOverview();
	@include _oLayoutAreaMain();
	@include _oLayoutAreaFooter();
}

/// Header Area
/// Outputs grid header area
/// @access private
@mixin _oLayoutAreaHeader() {
	.o-layout__header {
		grid-area: header;
	}
}

/// Sidebar Area
/// Outputs grid sidebar area
/// @access private
@mixin _oLayoutAreaSidebar() {
	.o-layout__sidebar {
		@include oTypographySans(1);
		@include _oLayoutNavigation();
		@include oGridRespondTo($until: M) {
			padding: 0 1rem;
			margin-top: $_o-layout-gutter;
		}

		grid-area: sidebar;

		a {
			@include oTypographyLink;
			border: 0;
		}
	}
}

/// Outputs hero area
/// @param {String} $hero-image - An image for the "hero" area background.
/// @access private
@mixin _oLayoutAreaHero($hero-image: '') {
	.o-layout__hero {
		@include _oLayoutBody;
		position: relative;
		grid-area: hero;
		padding: $_o-layout-gutter * 2 $_o-layout-gutter;
		text-align: center;
		min-height: 30vh;
		margin: 0 0 oTypographySpacingSize(4);
		display: flex;
		flex-direction: column;
		align-items: center;
		align-content: center;
		justify-items: center;
		justify-content: center;
		// The background image is inherited by the pseudo element.
		// This is to make it easier for a build service users to modify the background image.
		@if $hero-image {
			background-image: url($hero-image);
		}
		background-size: 0 0;
		&::before {
			position: absolute;
			content: '';
			width: 100vw;
			top: 0;
			bottom: 0;
			left: 50%;
			margin-left: -50vw;
			background-color: oColorsGetPaletteColor('slate-white-5');
			background-size: cover;
			background-image: inherit;
			z-index: -1;
		}
	}
}

/// Columns for overview items, such as cards.
/// Outputs overview area
/// @access private
@mixin _oLayoutAreaOverview() {
	.o-layout__overview {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
		grid-gap: $_o-layout-gutter * 3;
		grid-row-gap: $_o-layout-gutter;
		margin: 0 0 oTypographySpacingSize(4);
	}

	.o-layout__overview--highlight {
		grid-gap: $_o-layout-gutter;
		.o-layout-item {
			display: grid;
			grid-template-rows: 1fr min-content;
			background-color: oColorsGetPaletteColor('slate-white-5');
			padding: $_o-layout-gutter;
		}

		.o-layout-item__footer {
			grid-row: 2 / 3;
		}
	}
}

/// Main Area
/// Outputs grid main content area
/// @access private
@mixin _oLayoutAreaMain() {
	.o-layout__main {
		@include _oLayoutBody;
		@include oGridRespondTo($until: M) {
			padding: 0 1rem;
		}
		grid-area: main;

		> :first-child {
			margin-top: $_o-layout-gutter;
		}

		> table {
			overflow-x: scroll;
			box-sizing: border-box;
			max-width: 100%;
		}
	}
}

/// Footer Area
/// Outputs grid footer area
/// @access private
@mixin _oLayoutAreaFooter() {
	.o-layout__footer {
		grid-area: footer;
	}
}

/// Navigation
/// Outputs navigation styles
/// @access private
@mixin _oLayoutNavigation() {
	.o-layout__navigation {
		@include oGridRespondTo($from: M) {
			border-left: 0;
			position: sticky;
			top: $_o-layout-gutter;
			text-align: right;
			margin-top: $_o-layout-gutter;
		}

		border-left: 2px solid oColorsGetPaletteColor('teal');
		padding: 0;
		text-align: left;
		list-style: none;
		margin: 0;


		li {
			@include oGridRespondTo($from: M) {
				border-right: 2px solid oColorsGetPaletteColor('teal');
			}

			padding-right: 1em;
			border-right: 0;

			&.o-layout__navigation-title {
				@include oTypographyBold('sans');
				border-right: 0;
			}

			&:not(.o-layout__navigation-title) {
				[aria-current="location"] {
					color: oColorsGetPaletteColor('teal-30');
					background: oColorsMix('teal', 'white', 20);
				}
			}

			a {
				display: inline-block;
				padding: 0.4em 1em;
				margin-right: -1em;
			}
		}
	}
}
