/// Layout Base
/// Outputs responsive base grid
/// @access private
@mixin _oLayoutBase() {
	html,
	body {
		margin: 0;
	}

	.o-layout {
		@include oTypographySize(1);
		position: relative;
		display: grid;
		box-sizing: border-box;
		min-height: 100vh;
		min-width: 100%;
		grid-template-columns: 100%;
		grid-template-rows: auto 1fr auto;
		grid-column-gap: $_o-layout-gutter;
		grid-template-areas:
			"header"
			"main"
			"footer";
	}
}


/// Grid for a landing page layout (e.g. homepage).
/// @access private
@mixin _oLayoutLandingGrid() {
	.o-layout.o-layout--landing {
		grid-template-areas:
			"header"
			"hero"
			"main"
			"footer";
		@include oGridRespondTo($from: M) {
			grid-template-areas:
				"header header header"
				". hero ."
				". main ."
				"footer footer footer";
			grid-template-columns: 1fr minmax(auto, $_o-layout-container-max-width) 1fr;
		};
	}
}

/// Grid for document layout.
/// @access private
@mixin _oLayoutDocsGrid() {
	.o-layout.o-layout--docs {
		grid-template-rows: auto auto 1fr auto;
		grid-template-areas:
			"header"
			"sidebar"
			"main"
			"footer";

		//sass-lint:disable mixins-before-declarations - Source order matters for media queries. Although @at-root is used anyway, which will always output the media after.
		@include oGridRespondTo($from: M) {
			grid-template-rows: auto 1fr auto;
			grid-template-columns: 1fr minmax(auto, $_o-layout-aside-max-width) $_o-layout-main-section-width minmax(20ch, $_o-layout-aside-max-width) 1fr;
			grid-template-areas:
				"header header header header header"
				". sidebar main main ."
				"footer footer footer footer footer";
		};
		//sass-lint:enable mixins-before-declarations
	}

	.o-layout.o-layout--docs > .o-layout__main {
		@include oGridRespondTo($from: M) {
			display: grid;
			grid-column-gap: $_o-layout-gutter;
			grid-template-columns: $_o-layout-main-section-width 1fr;
			align-content: flex-start;
			padding: 0;
		}

		> * {
			grid-column: 1;
		}

		@include oGridRespondTo($from: L) {
			> aside {
				grid-column: 2;
				grid-row: span 3; //hack mchack, need to look into spanning across rows irrespective of siblings
			}
		};

		> table {
			grid-column: 1 / span 2;
		}

		.o-layout__rule-left {
			@include _oLayoutRule('left');
		}

		.o-layout__rule-right {
			@include _oLayoutRule('right');
		}

		.o-layout__main__single-span {
			grid-column-end: 2;
		}

		.o-layout__main__full-span {
			grid-column-end: -1;
		}
	}
}

/// Grid for query layout.
/// @access private
@mixin _oLayoutQueryGrid() {
	.o-layout.o-layout--query {
		grid-template-rows: auto auto auto 1fr auto auto;
		grid-template-areas:
			"header"
			"heading"
			"query-sidebar"
			"main"
			"aside-sidebar"
			"footer";

		//sass-lint:disable mixins-before-declarations - Source order matters for media queries. Although @at-root is used anyway, which will always output the media after.
		@include oGridRespondTo($from: M) {
			grid-template-rows: auto auto 1fr auto;
			grid-template-columns: 1fr minmax(auto, $_o-layout-aside-max-width) $_o-layout-main-section-width 1fr;
			grid-template-areas:
				"header header header header"
				". query-sidebar heading ."
				". query-sidebar main ."
				". query-sidebar aside-sidebar ."
				"footer footer footer footer";
		};

		@include oGridRespondTo($from: L) {
			grid-template-rows: auto auto 1fr auto;
			grid-template-columns: 1fr minmax(auto, $_o-layout-aside-max-width) $_o-layout-main-section-width minmax(auto, $_o-layout-aside-max-width) 1fr;
			grid-template-areas:
				"header header header header header"
				". query-sidebar heading aside-sidebar ."
				". query-sidebar main aside-sidebar ."
				"footer footer footer footer footer";
		};
		//sass-lint:enable mixins-before-declarations
	}

	.o-layout__heading {
		grid-area: heading;
		margin-top: $_o-layout-gutter;
		@include oGridRespondTo($until: M) {
			padding: 0 1rem;
		}
		> :last-child {
			@include oGridRespondTo($from: M) {
				margin-bottom: 0;
			}
		}
	}

	// Enable the heading area to overlay where the aside sidebar would be.
	// For a "full page search"
	.o-layout.o-layout--query .o-layout__heading--full {
		grid-area: heading;
		grid-column: heading-start / aside-sidebar-end;
	}

	// Enable the main area to overlay where the aside sidebar would be.
	// For a "full page search"
	.o-layout.o-layout--query .o-layout__main--full {
		grid-area: main;
		grid-column: main-start / aside-sidebar-end;
	}

	.o-layout__query-sidebar {
		border-right: 1px solid oColorsGetPaletteColor('slate-white-15');
	}

	.o-layout__aside-sidebar {
		border-left: 1px solid oColorsGetPaletteColor('slate-white-15');
	}

	//sass-lint:disable mixins-before-declarations
	@include oGridRespondTo($from: M) {
		.o-layout__aside-sidebar {
			margin-left: -$_o-layout-gutter;
		}
	}

	@include oGridRespondTo($from: L) {
		.o-layout__aside-sidebar {
			margin: 0;
		}
	}
	//sass-lint:enable mixins-before-declarations
}
