/// Base styling for the layout content
/// @access private
@mixin _oLayoutBody () {
	.o-layout-body {
		@include oTypographySans($scale: 1, $line-height: 1.4);

		p {
			max-width: oTypographyMaxLineWidth($scale: 1, $optimal-characters-per-line: 85);
		}

		a:not(.o-layout__unstyled-element) {
			@include oTypographyLink();
		}

		h1	{
			@include oTypographyProductHeadingLevel1();
		}

		h2 {
			@include oTypographyProductHeadingLevel2();
		}

		h3 {
			@include oTypographyProductHeadingLevel3();
		}

		h4 {
			@include oTypographyProductHeadingLevel4();
		}

		h5 {
			@include oTypographyProductHeadingLevel5();
		}

		h6 {
			@include oTypographyProductHeadingLevel6();
		}

		aside {
			@include _oLayoutRule('left');
			align-self: flex-start;
		}

		p,
		ol,
		ul,
		pre,
		aside,
		table {
			margin: 0 0 oTypographySpacingSize(4);
		}

		ul:not([data-o-component^="o-"], .o-layout__unstyled-element) {
			list-style-type: none;
			position: relative;
			padding-left: 1.5rem;

			li {
				margin-bottom: 0.5em;

				&:before {
					content: '—';
					position: absolute;
					left: 0;
					color: oColorsGetPaletteColor('teal');
					font-weight: 900;
				}
			}
		}

		ol:not([data-o-component^="o-"], .o-layout__unstyled-element) {
			position: relative;
			padding-left: 1.5rem;
		}
	}
}

/// Styles decorative rules for containers
///
///@param {String} $side — left or right rule to be styled
/// @access private
@mixin _oLayoutRule($side: 'left') {
	border-#{$side}: 2px solid oColorsGetPaletteColor('teal');
	padding-#{$side}: $_o-layout-gutter;
}
