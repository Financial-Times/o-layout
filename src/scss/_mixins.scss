/// Base styling for the layout content
/// @access private
@mixin _oLayoutTypography () {
	.o-layout-typography {
		@include oTypographyBody;
		line-height: 1.3; // Override default body line height.

		p:not(.o-layout__unstyled-element) {
			@include oTypographyBody;
			line-height: 1.3; // Override default body line height.
			max-width: oTypographyMaxLineWidth($scale: 1, $optimal-characters-per-line: 85);
		}

		a:not(.o-layout__unstyled-element) {
			@include oTypographyLink();
		}

		h1:not(.o-layout__unstyled-element)	{
			@include oTypographyHeadingLevel1();
		}

		h2:not(.o-layout__unstyled-element) {
			@include oTypographyHeadingLevel2();
		}

		h3:not(.o-layout__unstyled-element) {
			@include oTypographyHeadingLevel3();
		}

		h4:not(.o-layout__unstyled-element) {
			@include oTypographyHeadingLevel4();
		}

		h5:not(.o-layout__unstyled-element) {
			@include oTypographyHeadingLevel5();
		}

		h6:not(.o-layout__unstyled-element) {
			@include oTypographyHeadingLevel6();
		}

		aside:not(.o-layout__unstyled-element) {
			@include _oLayoutRule('left');
			align-self: flex-start;
		}

		ul:not(.o-layout__unstyled-element) {
			@include oTypographyList;
			@include oTypographyListUnordered;
		}

		ol:not(.o-layout__unstyled-element) {
			@include oTypographyList;
			@include oTypographyListOrdered;
		}

		table {
			margin: 0 0 oTypographySpacingSize(4);
		}
	}
}

/// Styles decorative rules for containers
///
///@param {String} $side â€” left or right rule to be styled
/// @access private
@mixin _oLayoutRule($side: 'left') {
	border-#{$side}: 2px solid oColorsGetPaletteColor('teal');
	padding-#{$side}: $_o-layout-gutter;
}
